name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  library:
    name: macOS
    runs-on: macos-14
    strategy:
      matrix:
        xcode: ['15.4']
        config: ['debug', 'release']
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Run ${{ matrix.config }} tests
        run: CONFIG=${{ matrix.config }} make test

  linux:
    name: Linux (Swift ${{ matrix.swift }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: ['debug', 'release']
        swift:
          - '5.10'
    container: swift:${{ matrix.swift }}
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: swift test -c ${{ matrix.config }}

  wasm:
     name: Wasm
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v4
       - uses: bytecodealliance/actions/wasmtime/setup@v1
       - uses: swiftwasm/setup-swiftwasm@v1
         with:
           swift-version: "wasm-5.9.2-RELEASE"
       - name: Build tests
         run: swift build --triple wasm32-unknown-wasi --build-tests
       - name: Run tests
         run: wasmtime --dir . .build/debug/swift-concurrency-extrasPackageTests.wasm

  windows:
    name: Windows
    strategy:
      matrix:
        os: [windows-latest]
        config: ['debug', 'release']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-5.10-release
          tag: 5.10-RELEASE

      - uses: actions/checkout@v4
      - name: Run tests
        run: swift build -c ${{ matrix.config }}
